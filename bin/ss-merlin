#!/bin/sh

SS_MERLIN_HOME=/opt/share/ss-merlin

CONFIG_DIR=${SS_MERLIN_HOME}/etc/dnsmasq.d
ACCELERATED_CONFIG=${CONFIG_DIR}/accelerated-domains.china.conf
GOOGLE_CONFIG=${CONFIG_DIR}/google.china.conf
APPLE_CONFIG=${CONFIG_DIR}/apple.china.conf

ansi_red="\033[1;31m";
ansi_green="\033[1;32m";
ansi_yellow="\033[1;33m";
ansi_std="\033[m";

stop_proxy() {
  echo -e "$ansi_green Stop shadowsocks-asuswrt-merlin... $ansi_std"

  if [[ ! -f /tmp/ss-merlin-is-run ]]; then
    echo -e "$ansi_red ss-merlin is not running. $ansi_std"
    exit 1
  fi

  cru d check-services-alive

  ${SS_MERLIN_HOME}/scripts/stop_all_services.sh

  ${SS_MERLIN_HOME}/scripts/clean_iptables_rule.sh

  sed -i "\#conf-dir=${SS_MERLIN_HOME}/etc/dnsmasq.d/,\*\.conf#d" /jffs/configs/dnsmasq.conf.add

  service restart_dnsmasq

  rm /tmp/ss-merlin-is-run

  echo -e "$ansi_green Stopped. $ansi_std"
}

start_proxy() {
  echo -e "$ansi_green Start shadowsocks-asuswrt-merlin... $ansi_std"

  if [[ -f /tmp/ss-merlin-is-run ]]; then
    echo -e "$ansi_red ss-merlin is running, please stop it before start. $ansi_std"
    exit 1
  fi

  echo "Initializing dnsmasq..."

  if [[ -d "$CONFIG_DIR" ]]; then
    default_dns_ip=127.0.0.1

    sed "s#114\.114\.114\.114#${default_dns_ip}#" ${ACCELERATED_CONFIG}.bak > ${ACCELERATED_CONFIG}
    sed "s#114\.114\.114\.114#${default_dns_ip}#" ${GOOGLE_CONFIG}.bak > ${GOOGLE_CONFIG}
    sed "s#114\.114\.114\.114#${default_dns_ip}#" ${APPLE_CONFIG}.bak > ${APPLE_CONFIG}

    user_domain_name_whitelist=${SS_MERLIN_HOME}/rules/user_domain_name_whitelist.txt
    user_domain_name_blocklist=${SS_MERLIN_HOME}/rules/user_domain_name_blocklist.txt
    user_domain_name_gfwlist=${SS_MERLIN_HOME}/rules/user_domain_name_gfwlist.txt

    OLDIFS="$IFS" && IFS=$'\n'
    if [[ -f ${user_domain_name_whitelist} ]]; then
      rm -f ${CONFIG_DIR}/whitelist-domains.china.conf
      for i in $(cat ${user_domain_name_whitelist} | grep -v '^#'); do
        echo "server=/${i}/${default_dns_ip}" >> ${CONFIG_DIR}/whitelist-domains.china.conf
      done
    fi

    if [[ -f ${user_domain_name_blocklist} ]]; then
      rm -f ${CONFIG_DIR}/blacklist-domains.china.conf
      for i in $(cat ${user_domain_name_blocklist} | grep -v '^#'); do
        echo "address=/${i}/127.0.0.1" >> ${CONFIG_DIR}/blocklist-domains.china.conf
      done
    fi

    if [[ -f ${user_domain_name_gfwlist} ]]; then
      for i in $(cat ${user_domain_name_gfwlist} | grep -v '^#'); do
        sed -i "/server=\/${i}\/.*/d" ${ACCELERATED_CONFIG}
        sed -i "/server=\/${i}\/.*/d" ${GOOGLE_CONFIG}
        sed -i "/server=\/${i}\/.*/d" ${APPLE_CONFIG}
      done
    fi
    IFS=${OLDIFS}
  fi

  echo "Updating dnsmasq config file..."

  if ! grep -qs "^conf-dir=${SS_MERLIN_HOME}/etc/dnsmasq.d/,\*\.conf$" /jffs/configs/dnsmasq.conf.add; then
      echo "conf-dir=${SS_MERLIN_HOME}/etc/dnsmasq.d/,*.conf" >> /jffs/configs/dnsmasq.conf.add
  fi

  ${SS_MERLIN_HOME}/scripts/apply_iptables_rule.sh

  echo "Starting all services..."
  ${SS_MERLIN_HOME}/scripts/start_all_services.sh

  service restart_dnsmasq

  echo "Creating cron jobs..."

  cru a check-services-alive "* * * * *" "$SS_MERLIN_HOME/scripts/start_all_services.sh"
  cru a update-ip-whitelist "15 3 * * 0" "$SS_MERLIN_HOME/scripts/update_ip_whitelist.sh"
  cru a update-dns-whitelist "15 4 * * 0" "$SS_MERLIN_HOME/scripts/update_dns_whitelist.sh"
  cru a upgrade-ss-merlin "20 6 * * 0" "$SS_MERLIN_HOME/tools/upgrade.sh"

  touch /tmp/ss-merlin-is-run

  echo -e "$ansi_green Started. $ansi_std"
}

restart_proxy() {
  stop_proxy
  sleep 5
  start_proxy
}

if [[ "$1" == 'stop' ]]; then
  stop_proxy
elif [[ "$1" == 'start' ]]; then
  start_proxy
elif [[ "$1" == 'restart' ]]; then
  restart_proxy
elif [[ "$1" == 'upgrade' ]]; then
  bash ${SS_MERLIN_HOME}/tools/upgrade.sh
elif [[ "$1" == 'uninstall' ]]; then
  bash ${SS_MERLIN_HOME}/tools/uninstall.sh
else
  echo -e "$ansi_yellow Usage: ss-merlin start|stop|restart|upgrade|uninstall $ansi_std"
fi
